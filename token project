// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;

contract MyToken {

    // Public variables to store token details
    string public name = "Degen"; // Token Name
    string public symbol = "DGN"; // Token Abbreviation
    uint256 public totalSupply; // Total Supply

    // Mapping of addresses to balances
    mapping(address => uint256) public balances;

    // Mint function to create tokens
    function mint(address _to, uint256 _value) public {
        totalSupply += _value; // Increase the total supply
        balances[_to] += _value; // Increase the balance of the specified address
    }

    // Burn function to destroy tokens
    function burn(address _from, uint256 _value) public {
        require(balances[_from] >= _value, "Insufficient balance to burn"); // Ensure the balance is sufficient
        totalSupply -= _value; // Decrease the total supply
        balances[_from] -= _value; // Decrease the balance of the specified address
    }
}
