// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;

contract MyToken {

    // Public variables
    string public tokenName;
    string public tokenAbbrv;
    uint public totalSupply;

    // Mapping from address to balance
    mapping(address => uint) public balances;

    // Constructor to initialize the token details
    constructor(string memory _tokenName, string memory _tokenAbbrv, uint _initialSupply) {
        tokenName = _tokenName;
        tokenAbbrv = _tokenAbbrv;
        totalSupply = _initialSupply;
        balances[msg.sender] = _initialSupply; // Assign the initial supply to the contract deployer
    }

    // Mint function
    function mint(address _to, uint _value) public {
        totalSupply += _value;
        balances[_to] += _value;
    }

    // Burn function
    function burn(address _from, uint _value) public {
        require(balances[_from] >= _value, "Insufficient balance to burn");
        totalSupply -= _value;
        balances[_from] -= _value;
    }
}
